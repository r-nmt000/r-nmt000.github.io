<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[NomoLog]]></title>
  <link href="http://r-nmt000.github.io/atom.xml" rel="self"/>
  <link href="http://r-nmt000.github.io/"/>
  <updated>2014-01-20T17:11:17+09:00</updated>
  <id>http://r-nmt000.github.io/</id>
  <author>
    <name><![CDATA[r-nmt000]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Study abroad]]></title>
    <link href="http://r-nmt000.github.io/blog/2014/01/14/english-canada/"/>
    <updated>2014-01-14T02:08:59+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2014/01/14/english-canada</id>
    <content type="html"><![CDATA[<p><img src="images/vancouver.jpg" alt="vancouver" /></p>

<h1>カナダ留学について</h1>

<p>自分は2012年の10月から2013年の9月までカナダのバンクーバーってところで働いてました。
語学留学ってやつです。そのときの経験をここに記録して少しでも語学留学を考えている人の役に立てたらなと思います。</p>

<!-- more -->


<h3>注意</h3>

<p>このブログでは自分の考えや思いをなるべく<strong>本音</strong>で<strong>歯に衣着せぬ形</strong>で書いています。かなり<strong>主観的</strong>になっている箇所もあると思います。
読んでいて不快になる人がいたらごめんなさい。なにか意見があったらコメント欄に書いて貰えると嬉しいです。</p>

<h2>カナダに行く前のぼく</h2>

<p>当時の自分の海外渡航経験は中学生の時に学校の金で行ったヨーロッパと家族旅行で行った台湾だけです。
ようするに自分の金出していくほどの価値はねーなと思っていたわけです。
長期休みの度に海外行くようなリア充タイプでは全然ありませんでした。むしろ「海外いけよ価値観変わるぞ」とか言ってる奴は嫌いでした。そんなことで変わるような価値観は持ちあわせてねーよと思ってました。
まあ、典型的な理系日本人タイプだったわけです。
そんな僕ですが、今は彼らの言っていたことがわかります。</p>

<h2>なんでカナダか</h2>

<p>自分はせっかくならバッチリ英語を喋れるようになりたかったので1年休学することにしました。
短期ならフィリピンがいいと思います。安いし！</p>

<p>そんなわけで1年いくことにしたんですが、1年間語学学校に行くような金はありません。つまり、現地で労働する必要があったので&#8221;&ldquo;ワーキングホリデービザ&rdquo;&ldquo;が取れる国に行く必要がありました。</p>

<h3>ワーキングホリデービザとは</h3>

<ul>
<li>1年間限定で学生にも労働者にもニートにもなれるビザ</li>
<li>通常ワークビザを取るのは基本的にはめっちゃ大変だがワーホリは簡単に取れる</li>
<li>しかも安い。確か1万円くらい</li>
<li>すなわち、最強のビザ</li>
</ul>


<p>このビザが無いと、基本的に僕のような留学生が働くことはできません。
日本から英語圏の国でワーホリが取れる国は、当時はカナダ、オーストラリア、ニュージーランド、イギリスでした。(たぶんね)
で、シリコンバレーにかなり憧れを抱いていた僕は帰りにアメリカ旅行して帰ろうと思ってカナダを選びました。</p>

<h2>なに準備すればいいんだ？</h2>

<p>そうです。留学するぜ！ってなってもどーすればいいかわかりません。そこで<strong>留学エージェント</strong>を使いましょう。
留学までに必要なものを色々教えてくれたり準備してくれたりします。便利！！</p>

<p>ただ、ここで問題があります。このエージェントには無料のところと有料のところがあるのです。
ここで僕の<strong>独断と偏見による</strong>無料と有料のエージェントの長所と短所を見てみましょう</p>

<p><strong>無料</strong></p>

<ul>
<li><p>長所</p>

<ul>
<li>なんといってもタダ。</li>
</ul>
</li>
<li><p>短所</p>

<ul>
<li>すげー<strong>インターンシップ</strong>を押してくる</li>
</ul>
</li>
</ul>


<p><strong>有料</strong></p>

<ul>
<li><p>長所</p>

<ul>
<li><strong>無駄に</strong>サービスが手厚い。<strong>無駄に</strong></li>
<li>結構本音で相談に乗ってくれるとこが多かった気がする。</li>
</ul>
</li>
<li><p>短所</p>

<ul>
<li>手数料を取る。高い。なめてる。</li>
</ul>
</li>
</ul>


<p>ん？無料の短所のとこになんか書いてありますね。インターンシップ？</p>

<h3>インターンシップとは</h3>

<p>就業体験のこと。現地のオフィスでビジネス英語を学ぶことができる。たいてい無給。</p>

<p>なんだインターンシップ素晴らしいじゃんビジネス英語学べるじゃんと思ったあなた。騙されています。
こうしたインターンシップではどういう仕事を回されるかと言えば事務作業が主です。書類コピーしたりパソコンと睨めっこしたりです。
まあ電話対応の仕事を回されればかなりいい方です。</p>

<p>インターンは修了するとなんか修了証とかいう紙切れが貰えるらしくそれが就活とかで役立つらしいですが、そんなもんより<strong>英語力の向上のみを目標とするなら接客のバイトでもしたほうがいいと思います。</strong>
あとは、特殊な技能があればそれを活かすこともできますね。例えば日本でプログラマの業務経験があれば現地で働くことも可能です。実際自分もプログラマとして働いていました。(エージェントにはそういった業務に就くのはほとんど無理と言われていて、最初は諦めて接客のバイト探してた。今思うと恨めしい。)</p>

<p>じゃあなんで無料のエージェントがインターンを押すのかと言えば彼らはインターン紹介料と称してそこでお金を取っているからです。
更に質が悪いのが、インターンをすることを日本で確約して行ったはずなのに現地に行ってみたら<strong>面接</strong>を確約していただけなんてこともザラにあります。だったらバイト探すわって話です。</p>

<p>有料の方は有料の方で15万くらいの手数料取られます。</p>

<p>じゃあどうすればよいか？</p>

<p>いくつかのエージェントを回って相談してみてください。カウンセリングはタダですから。絶対一つじゃダメです。
そして、有料エージェントで色々相談して無料エージェントで実際に申し込むことをオススメします。</p>

<p>有料エージェントは有料だけあって結構親身に相談に乗ってくれるところも多いです。ありがたいですね。
そして自分の考えが固まったら<strong>無料エージェントで実際に申し込みましょう</strong>
こうすることで無料と有料のいいとこ取りをすることができます。</p>

<h3>個人的に最安だと思う留学プラン(カナダ編)</h3>

<ul>
<li>語学学校1ヶ月        $700</li>
<li>ホームステイ1ヶ月  $700</li>
<li>海外保険                 $2000</li>
<li>航空券(片道)           $800</li>
<li>ワーホリビザ          $100</li>
<li>予備のお金             $2000</li>
<li>合計　　　　　　　$6300</li>
</ul>


<p>わお！安い！！これで一年カナダで生活できます。<strong>仕事が見つかりさえすればね</strong></p>

<p>語学学校とホームステイが1ヶ月なのは1ヶ月で十分慣れるからです。マジかよと思うかもしれないけどマジです。
そもそも足りないと思えば現地で期間は伸ばせるんだから1ヶ月でマジで十分です。</p>

<p>ここで試しに無料エージェント行って見積もりもらってきてみてください。多分語学学校とホームステイは3ヶ月くらいつくはずです。
なぜなら学校とホームステイが長ければ長い程彼らは儲かるから。僕の友人は半年で契約して3ヶ月で学校に行かなくなりました。
彼らはあの手この手であなたを説得し(割引等)長期間の契約を結ぼうとしますが、
<strong>これ以上僕の友人のような犠牲者を出してはいけません</strong></p>

<p>長いんでちょっとこの辺で切りましょう。次回は現地に行ったあとの話から始めます。</p>

<h2>まとめ</h2>

<ol>
<li>ワーホリ熱いよ</li>
<li>インターンより働け</li>
<li>有料エージェントで相談し無料エージェントで申し込む</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moaning Programming Language]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/28/programming-scala-brainfuck/"/>
    <updated>2013-12-28T23:52:07+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/28/programming-scala-brainfuck</id>
    <content type="html"><![CDATA[<p><img src="http://r-nmt000.github.io/images/woman.jpg" alt="woman" /></p>

<h1>喘ぐプログラミング言語</h1>

<p>喘いでプログラミングするための言語です。</p>

<!-- more -->


<h2>言語仕様</h2>

<p>Brainfuckの派生言語です。</p>

<p>命令は次のとおり</p>

<table>
<thead>
<tr>
<th></th>
<th align="center"> 命令      </th>
<th align="center">  Brainfuck </th>
<th align="left"> 説明 </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="center"> yeah!     </td>
<td align="center">  >         </td>
<td align="left"> ポインタをインクリメントする                         </td>
</tr>
<tr>
<td></td>
<td align="center"> f**k!     </td>
<td align="center">  &lt;         </td>
<td align="left"> ポインタをデクリメントする                           </td>
</tr>
<tr>
<td></td>
<td align="center"> ah,       </td>
<td align="center">  +         </td>
<td align="left"> ポインタが指す値をインクリメントする                 </td>
</tr>
<tr>
<td></td>
<td align="center"> oh,       </td>
<td align="center">  &ndash;         </td>
<td align="left"> ポインタが指す値をデクリメントする                   </td>
</tr>
<tr>
<td></td>
<td align="center"> comeon!   </td>
<td align="center">  .         </td>
<td align="left"> ポインタが指す値を出力する                           </td>
</tr>
<tr>
<td></td>
<td align="center"> mm&hellip;     </td>
<td align="center">  ,         </td>
<td align="left"> 入力から1バイトポインタが指す先に読み込む            </td>
</tr>
<tr>
<td></td>
<td align="center"> ohmygod!  </td>
<td align="center">  [         </td>
<td align="left"> ポインタが指す値が0なら対応する]の直後にジャンプ     </td>
</tr>
<tr>
<td></td>
<td align="center"> god!      </td>
<td align="center">  ]         </td>
<td align="left"> ポインタが指す値が0でないなら対応する[の直後にジャンプ </td>
</tr>
</tbody>
</table>


<h2>喘ぎ方</h2>

<p><a href="http://r-nmt000.github.io/downloads/MPL.jar">こちら</a>からjarをダウンロードしてください。(重くてごめんなさい)</p>

<p>テキストファイルに喘ぎ声をプログラムし、以下のコマンドを実行してください。(Java実行環境が必要)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java -jar MPL.jar &lt;filename&gt;</span></code></pre></td></tr></table></div></figure>


<h2>hello world</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ah,ah,ah,ah,ah,ah,ah,ah,ah,ohmygod!yeah!ah,ah,ah,ah,ah,ah,ah,ah,yeah!ah,ah,ah,ah,ah,ah,ah,ah,ah,ah,ah,yeah!ah,ah,ah,ah,ah,f**k!f**k!f**k!oh,god!yeah!comeon!yeah!ah,ah,comeon!ah,ah,ah,ah,ah,ah,ah,comeon!comeon!ah,ah,ah,comeon!yeah!oh,comeon!oh,oh,oh,oh,oh,oh,oh,oh,oh,oh,oh,oh,comeon!f**k!ah,ah,ah,ah,ah,ah,ah,ah,comeon!oh,oh,oh,oh,oh,oh,oh,oh,comeon!ah,ah,ah,comeon!oh,oh,oh,oh,oh,oh,comeon!oh,oh,oh,oh,oh,oh,oh,oh,comeon!yeah!ah,comeon!</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<p>もっといい喘ぎ方があったら教えて下さい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Importatnt things when you choose a company]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/17/jobhunting/"/>
    <updated>2013-12-17T13:17:52+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/17/jobhunting</id>
    <content type="html"><![CDATA[<h2>会社を選ぶ上で重要なこと</h2>

<p>こないだ行ったセミナーで聞いたお話がとても印象深くて自分の考えにも合致していたので、自分なりに解釈してここにまとめてみました。</p>

<!-- more -->


<h2>日本はなぜ衰えたか</h2>

<ul>
<li>実は、衰退したわけではなく他国が追いついただけ</li>
<li>行動成長期の後人口減少が始まるのはどの国でも起こる自然なことで、日本の現状は至極当然</li>
<li>価格競争では他国に勝てないが、かと言って今まで通りのものの作り方(ピュアに高品質を目指す作り方)では世界で勝てない</li>
<li>尖ったモノを作らなければ勝てないが、大企業にはそれができない。リスクを取れないから。</li>
</ul>


<h2>アメリカはなぜ強いか</h2>

<p>かつて日本はアメリカと肩を並べる経済力を持っていましたが今では他国に追いぬかれてしまいました。
しかしアメリカは世界一の経済力を有しています。それにはいくつかの理由があります。</p>

<p><strong>1. 成功を尊ぶ文化</strong></p>

<ul>
<li>アメリカでは新しいことを成すことを尊ぶ文化がある。</li>
<li>リスクを取り、新しいことをして成功しようという空気ができあがっている。</li>
</ul>


<p><strong>2. 移民を受け入れている</strong></p>

<ul>
<li>通常の国では経済成長の後人口が減少していくが、アメリカは移民で人口を増加させている。</li>
<li>特別な技能を持つ人間を迎え入れる体制が法律で整えられている。</li>
</ul>


<p><strong>3. 英語が母国語</strong></p>

<ul>
<li>母国語がグローバルスタンダードであるのは大きい。</li>
<li>全世界へ向けてビジネスを展開しやすく、全世界から人が集まりやすい。</li>
</ul>


<h2>僕達の生きる道は２つある。</h2>

<p>今の日本で生きる道は２つあります。それは</p>

<p><strong>業界トップの企業に行って会社にぶら下がる道</strong></p>

<p>もう一つは</p>

<p><strong>キャリア形成を行ってどこへ行っても通用する力をつける道</strong></p>

<p>日本経済の衰退、終身雇用の崩壊、外資企業の進出から将来多くの人が好む好まざるに関わらず転職を余儀なくされるでしょう。
そうなった時労働者は大きく分けて上記２つの道を歩まざるを得なくなります。</p>

<h2>キャリア形成を考える上でどういった企業がいいのか</h2>

<p>自分の成長に都合の良い会社を選びましょう。特に下記の条件を満たす企業が良いでしょう。</p>

<p><strong>1. 創業経営者がいること</strong></p>

<ul>
<li>２代目、３代目の経営者ではリスクを取る経営はできません。彼らは既に大きくなった会社を危険に晒すことなどできないからです。</li>
<li>リスクが取れないということは、会社全体がきちんと管理されているということです。あなたに大きな裁量権が与えられることは少ないでしょう。</li>
</ul>


<p><strong>2. できれば小さい方がいい</strong></p>

<ul>
<li>小さい会社ではあなたは若い時から大きな裁量権を得られ、自由に動くことができます。０から自分で物事を考えなければなりません。</li>
<li>会社の将来などあなたには関係ありません。若い内に経験を積むことが重要なのです。</li>
</ul>


<p><strong>3. グローバルに通用することをやっているか</strong></p>

<ul>
<li>業務内容は重要です。国内のみに通用する事業ではいずれグローバルな競合他者に飲み込まれるでしょう。</li>
</ul>


<p><strong>4. 同期が8-9割優秀かどうか</strong></p>

<ul>
<li>環境は重要です。1割では足りません。選考の段階で周囲を見渡してどんな人がいるかチェックしてみましょう。</li>
</ul>


<h2>まとめ</h2>

<p>なかなかそんな会社見つけるの難しいよなーというのが正直なところですよね^^;</p>

<p>でも、今まで大手を中心に(というか大手だけ)見ていたので、このセミナーのおかげでベンチャーも見てみようという気になりました。</p>

<p>頑張っていきましょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android with Scala]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/17/scala-android-scala/"/>
    <updated>2013-12-17T11:20:42+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/17/scala-android-scala</id>
    <content type="html"><![CDATA[<h1>ScalaでAndroid</h1>

<p>こちらを参考にしました！
<a href="http://shogogg.hatenablog.jp/entry/2013/12/06/000039">Scala + sbt-android + IntelliJ で快適Androidアプリ開発</a></p>

<p>以下に僕が詰まったところをまとめました！</p>

<!-- more -->


<h2>詰まったところ</h2>

<ol>
<li>compatibility-v4とcompatibility-v7-appcompatでエラーが出る</li>
<li>ensime関連のエラーが出る</li>
<li>OutOfMemoryのエラーが出る</li>
</ol>


<h3>compatibility-v4とcompatibility-v7-appcompatでエラーが出る</h3>

<p>参考にしたサイトの手順に沿ってソースをコンパイルしようとすると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[warn]      ::::::::::::::::::::::::::::::::::::::::::::::
</span><span class='line'>[warn]      ::          UNRESOLVED DEPENDENCIES         ::
</span><span class='line'>[warn]      ::::::::::::::::::::::::::::::::::::::::::::::
</span><span class='line'>[warn]      :: android.support#compatibility-v4;19: not found
</span><span class='line'>[warn]      :: android.support#compatibility-v7-appcompat;19: not found
</span><span class='line'>[warn]      ::::::::::::::::::::::::::::::::::::::::::::::</span></code></pre></td></tr></table></div></figure>


<p>となってコンパイルできません。</p>

<p>自分の環境では&lt;project_dir>/project/build.scalaの</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// ======================================================================                                                                                                                             
</span><span class='line'>34   // 依存関係
</span><span class='line'>35   // ======================================================================
</span><span class='line'>36   val libraryDependencies = Seq(
</span><span class='line'>37
</span><span class='line'>38     // Android Support Library v4 (jar)
</span><span class='line'>39     "android.support" % "compatibility-v4" % "19",
</span><span class='line'>40
</span><span class='line'>41     // Android Support Library v7 (jar & apklib)
</span><span class='line'>42     "android.support" % "compatibility-v7-appcompat" % "19",
</span><span class='line'>43     apklib("android.support" % "compatibility-v7-appcompat" % "19")
</span><span class='line'>44
</span><span class='line'>45   )</span></code></pre></td></tr></table></div></figure>


<p>の&#8221;19&#8221;の部分を&#8221;19.0.0&#8221;に変更したらうまくいきました。</p>

<h3>ensime関連のエラーが出る</h3>

<p>上記のエラーと似たような感じで、ensimeが見つからねえよ！と怒られるエラーが起きました。
これに関しては調べても解決策が見つからず、恐らく以前に入れたensimeがなにか悪さをしてるんだろーなーと思い
sbtとscalaをインストールし直したところ直りました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew uninstall sbt
</span><span class='line'>brew uninstall scala
</span><span class='line'>rm -rf ~/.sbt
</span><span class='line'>rm -rf ~/.ivy2
</span><span class='line'>brew install sbt
</span><span class='line'>brew instalo scala</span></code></pre></td></tr></table></div></figure>


<p>わけわからなくなったら全部入れ替えちゃうのも手ですね。</p>

<h3>OutOfMemoryのエラーが出る</h3>

<p>これはeclipseでjavaやってたときもみたことあるエラーでした。
eclipseのときはeclipse.iniにメモリサイズを明示することで解決しましたがscalaでは~/.sbtconfigに</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SBT_OPTS="-Dfile.encoding=UTF-8 -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m"  </span></code></pre></td></tr></table></div></figure>


<p>とすることで解決しました。先頭のUTF-8のオプションは元々ついていたもので、後からCMSClassUnloadingとMaxPermSizeを追加しました。</p>

<h3>IntelliJ IDEA 13でandroid support libraryの解決がうまくいかない</h3>

<p>参考にしたサイトではIntelliJ 12を使っているようですが最新が13なので僕は13を使いました。</p>

<p>13はsbtのプロジェクトをそのままimportする機能があり<code>sbt gen-idea</code>する必要がないのですが、今回の構成に限ってはIntelliJの機能でimport
するのではなく<code>sbt gen-idea</code>してからIntelliJでopenするのが無難です。</p>

<h3>まとめ</h3>

<p>僕が詰まったのはこんなところです。
みなさん素晴らしいscalaライフを!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASR/TTS API for smartphone]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/06/smartphone-speechrecognition/"/>
    <updated>2013-12-06T08:55:59+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/06/smartphone-speechrecognition</id>
    <content type="html"><![CDATA[<h2>スマートフォンで使える音声認識・合成APIまとめ(無料)(13年12月現在)</h2>

<p>音声認識・合成機能が必要になったので調べました。
さっと調査しただけなので間違ってたらごめんなさい。
こんなのあるんだ！ってくらいに見ていただけるとありがたいです。</p>

<!-- more -->


<hr />

<h3>OpenEars</h3>

<ul>
<li>iOS向け</li>
<li>日本語には対応してないっぽい&hellip;?(公式ページで対応言語が見つけられなかった)</li>
<li>ASR/TTS対応</li>
<li>使い方 : <a href="http://d.hatena.ne.jp/shu223/20130810/1376105883">フリーのiOS向け音声認識/音声合成ライブラリ&#8221;OpenEars&#8221;の使い方</a></li>
<li>公式 : <a href="http://www.politepix.com/openears/">OpenEars</a></li>
</ul>


<h3>UIDictationController</h3>

<ul>
<li>iOS向け</li>
<li>iOSの非公式クラス</li>
<li>ASRのみ</li>
<li>Siriの音声認識機能がそのまま使えるのは魅力</li>
<li>でも非公式だからこれを使ってアプリ作っても公開できない</li>
<li>使い方 : <a href="http://d.hatena.ne.jp/KishikawaKatsumi/20120310/1331335893">iOS5.1の音声入力を使ってアプリケーションを操作してみる</a></li>
</ul>


<h3>Google 音声認識API</h3>

<ul>
<li>Android向け</li>
<li>日本語対応(各種言語に対応)</li>
<li>ASR/TTS対応(ただしTTSは日本語対応してないらしい)</li>
<li>Google公式、Androidだけでいいならこれでいいかもしれない</li>
</ul>


<h3>iSpeech Mobile SDK</h3>

<ul>
<li>iOS &amp; Android &amp; BlackBerry対応</li>
<li>日本語対応(各種言語に対応)</li>
<li>ASR/TTS対応</li>
<li>Google翻訳の読み上げ機能の内何言語かはiSpeechが使われているらしい</li>
<li>webサービスに実装する場合は有料</li>
<li>公式 : <a href="http://www.ispeech.org/">iSpeech</a></li>
</ul>


<h3>Dragon Mobile SDK</h3>

<ul>
<li>iOS &amp; Android対応</li>
<li>日本語対応(各種言語に対応)</li>
<li>ASR/TTS対応</li>
<li>Dragon Dictationを出している会社のAPI</li>
<li>有料版もあり</li>
<li>公式 : <a href="http://dragonmobile.nuancemobiledeveloper.com/public/index.php?task=home">NDEV nuance mobile</a></li>
</ul>


<h3>Lexee</h3>

<ul>
<li>iOS向け、Android対応予定</li>
<li>(多分)英語のみ</li>
<li>ASR/TTS対応</li>
<li>まだベータ版</li>
<li>Siriのような音声アシスタントを想定して作られているらしい</li>
<li>今のところ無料</li>
<li>今後の動向が気になる</li>
<li>公式 : <a href="http://www.angel.com/labs/lexee.php">Lexee</a></li>
</ul>


<h2>まとめ</h2>

<p>色んなスマートフォン、色んな言語に対応するならiSpeechかDragonかなあという感じですね。</p>

<p>細かくはまだ見てないので精度やライセンスその他諸々確認しつつ使いやつを決めたいです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Last Starbucks]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/05/others/"/>
    <updated>2013-12-05T16:09:40+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/05/others</id>
    <content type="html"><![CDATA[<h2>前回までのあらすじ</h2>

<ul>
<li>スタバにめっちゃアプライしまくった</li>
<li>受からない</li>
<li>友人の助けを経てラストチャンスに挑む</li>
<li>そして結果が返ってきた</li>
</ul>


<!-- more -->


<h3>遂にメールが届いた&hellip;同じメールを何通受け取ったことだろうか&hellip;</h3>

<p><img src="http://r-nmt000.github.io/images/posts/mailtitle.jpg" alt="mailtitle" /></p>

<h3>今から地獄の門を開くぜ&hellip;</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>　     　　　　＿＿＿＿＿ 
</span><span class='line'>　  　　 　／　＼　 　 ／＼ 
</span><span class='line'>　　  　／ し （＞） 　（＜）＼　　頼む受かっててくれ！　
</span><span class='line'>　　　　|　∪　  （__人__）　J |  　＿＿＿＿＿＿＿_ 
</span><span class='line'>　 　　 ＼　u　　 ｀⌒´　  　／　  | |　　　　　　　| 
</span><span class='line'>　　　　ノ　　　　 　　  　　＼ 　　| |　　　　　　　|　 
</span><span class='line'>　    ／´　　　　　　　　　　　   | |　　 　　 　　| 
</span><span class='line'>　   |　　　　ｌ　　　　　　    　| |　　 　　 　　| 
</span><span class='line'>               　　　　　 　　　＿＿＿_ 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>             ＿＿＿＿
</span><span class='line'>　　　　　／　　 　u　＼ 
</span><span class='line'>　　 　／　　＼ 　  　 ─＼　　　チラッ 
</span><span class='line'>　　　／し （＞）  　（●）＼ 
</span><span class='line'>　　　|　∪　  （__人__） J|  ＿＿＿＿＿＿＿_ 
</span><span class='line'>　　 ＼　　u　　 ｀⌒´　 　／ | | 　　　　　　　| 
</span><span class='line'>　　　　ノ　　　　　 　　　＼ | |　 　　　　　　|　 
</span><span class='line'>　 ／´　　　　　 　　　 　　 | |　　　　 　　　|　 
</span><span class='line'>　|　　　　ｌ　 　  　　　　　| | 　　　　　　　|                     </span></code></pre></td></tr></table></div></figure>


<p><img src="http://r-nmt000.github.io/images/posts/mailcontents.jpg" alt="mailcontents" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>　　　　　　／￣￣￣￣￣＼ 
</span><span class='line'>　　　　　/;::　　　　 　;ヽ 
</span><span class='line'>　　　　　|;:: ｨ●ｧ　　ｨ●ｧ::| 
</span><span class='line'>　　　　　|;::　　 　　　:;| 
</span><span class='line'>　　　　　|;:: 　c{　っ　:;|　　　 
</span><span class='line'>　　　　  |;::　　＿＿　:;;| 
</span><span class='line'>　　　 　 ヽ;::　　ー　::;／ 
</span><span class='line'>　　　　　　＼;;:　　:;;／ 
</span><span class='line'>　　　　　　 |;::　 ::;| 
</span><span class='line'>　　　　　　 |;::　 ::;| 
</span><span class='line'>　　　／￣￣￣　　　　 ￣￣￣＼ 
</span><span class='line'>　　　|;;::　　　　　　　　::;;| 
</span><span class='line'>　　　|;;::　　　　　　　　::;;| 
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse keybind's setting]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/04/eclipse-tips/"/>
    <updated>2013-12-04T23:56:20+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/04/eclipse-tips</id>
    <content type="html"><![CDATA[<h2>Eclipseでキーバインドの設定をインポート、エクスポートする</h2>

<p>Eclipseの嫌いな機能のひとつ、キーバインドがワークスペースと結びつく機能
こいつのせいでワークスペース切り替えるたびにいちいちキーバインドの設定をインポートしなくちゃいけない。</p>

<!-- more -->


<h1>How to</h1>

<ol>
<li>File->ExportからPreferenceを選択し、Nextボタン押下</li>
<li>Keys Preferencesを選択、To preference fileから出先を指定</li>
<li>Finish</li>
</ol>


<p>できたepfファイルを他のワークスペースでインポートすれば使えます。
この設定ファイルはよく使うと思うのでクラウドにでもあげとくといいかも。
僕は設定ファイルの類はgithubに置いといて違う環境に移った時にすぐ使えるようにしています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TagCloud]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/04/octopress-tagcloud/"/>
    <updated>2013-12-04T20:18:00+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/04/octopress-tagcloud</id>
    <content type="html"><![CDATA[<h2>タグクラウド導入してみました。</h2>

<p>参考にしたサイトはこちら</p>

<ul>
<li><p><a href="http://rcmdnk.github.io/blog/2013/04/12/blog-octopress/">Octopressでのタグの運用</a></p></li>
<li><p><a href="http://blog.digital-bot.com/blog/2013/09/03/octopress-tips/">Octopressのカスタマイズ</a></p></li>
</ul>


<p>ありがとうございました。</p>

<!-- more -->


<h2>タグクラウドって？</h2>

<ul>
<li>各記事の内容を端的に表す&#8221;タグ&#8221;</li>
<li>そのタグのリストを<strong>おされ</strong>(重要)に表示したもの(主観)</li>
<li>昔はSEO対策で意味あったっぽい。</li>
<li>今は対策されて意味ないっぽい。</li>
</ul>


<h2>導入</h2>

<p>上記サイトの手順をそのまま実行するだけでおっけーでした。
なので僕がここに書くことはありません笑</p>

<p>ただ、自分のRubyの知識不足とファイルの置換ミスで割と手間取ってしまったので、
結果として結構時間がかかってしまいました。変更箇所は割と多いので細かくブランチを切って作業することをおすすめします。</p>

<p>Ruby勉強しなきゃなあ&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kindle paperwhite]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/01/kindle/"/>
    <updated>2013-12-01T18:29:48+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/01/kindle</id>
    <content type="html"><![CDATA[<h2>買いました！</h2>

<p><img src="http://r-nmt000.github.com/images/th_IMG_0172.jpg" alt="kindle1" /></p>

<!-- more -->


<h2>開封！</h2>

<p><img src="http://r-nmt000.github.com/images/th_IMG_0173.jpg" alt="kindle2" /></p>

<h2>裏面はこんな感じ。</h2>

<p><img src="http://r-nmt000.github.com/images/th_IMG_0174.jpg" alt="kindle3" /></p>

<h2>起動した！かっこいい！</h2>

<p><img src="http://r-nmt000.github.com/images/th_IMG_0175.jpg" alt="kindle4" /></p>

<p>これでたくさん本が読めますね＼(^o^)／</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start your blog with Octopress]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/01/new-octopress/"/>
    <updated>2013-12-01T13:51:44+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/01/new-octopress</id>
    <content type="html"><![CDATA[<h1>Octopressで始めるギークなブログ</h1>

<p>アウトプットの練習として、ブログを始めることにしました。
色んなブログサービスがありますがエンジニア向けということで<a href="octopress.org">Octopress</a>を使ってみることに。
設定は以下のサイトを参考にしました。</p>

<!-- more -->


<ul>
<li><p><a href="http://www.miukoba.net/blog/2013/01/05/start-octopress/">Octopressはじめました</a></p></li>
<li><p><a href="http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/">OctopressでGitHub無料ブログ。sourceをBitbucket管理。簡単ガイド！</a></p></li>
</ul>


<p>大まかな手順は次の通りです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GitHubでOctopress用のリポジトリ作成
</span><span class='line'>Octopressからソースコード取得
</span><span class='line'>GitHubへのdeploy設定
</span><span class='line'>ブログの細かな設定
</span><span class='line'>ブログテーマの変更
</span><span class='line'>記事を作成、アップ</span></code></pre></td></tr></table></div></figure>


<p>上記の手順を１から丁寧に書いてもいいんですが、Octopressの設定については多くの方が分かりやすくまとめてらっしゃるのでここでは自分がつまづいたところをかいつまんで説明していこうと思います。</p>

<hr />

<h2>rake install [&lsquo;theme-name&rsquo;]がうまくいかない</h2>

<p>ブログテーマを設定する箇所です。なぜかinstallが上手くいきません。なんでかなーとググってみると
<a href="http://tantant.jp/blog/Octopress/installing-octopress/">Markdownで書いてGitで管理するブログ「Octopress」の始め方</a>
にある通り、zshを使っていると<em>[ ]</em>が式として認識されてしまうらしいです。
対応策としては<code>rake install \['theme-name'\]</code>のように括弧をバックスラッシュでエスケープする、もしくは.zshrcに以下の設定を追記しましょう。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setopt nonomatch</span></code></pre></td></tr></table></div></figure>


<p><code>alias rake="noglob rake"</code>を追記する方法もありますが、これだと後述する<code>bundle exec</code>と組み合わさった時上手く動きませんでした。</p>

<hr />

<h2>rake generateがうまくいかない</h2>

<p>次のエラーが吐かれてrakeが止まります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake aborted!
</span><span class='line'>You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Using bundle exec may solve this.
</span><span class='line'>/Users/nomoto/repos/r-nmt000.github.io/Rakefile:2:in `&lt;top (required)&gt;'
</span><span class='line'>(See full trace by running task with --trace)</span></code></pre></td></tr></table></div></figure>


<p><a href="http://d.hatena.ne.jp/yamanetoshi/20131102/1383355220">Octopress:/var/log/messages</a>によると<code>bundle exec rake generate</code>で上手く動くらしいのですが、動かない&hellip;</p>

<p>更に調べると<a href="http://kozy4324.github.io/blog/2013/03/02/exec-rake-with-version/">バージョンを指定してRakeを実行する</a>ということができるらしいので試してみました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake _0.9.6_ generate
</span><span class='line'>(in /Users/nomoto/repos/r-nmt000.github.io)
</span><span class='line'>## Generating Site with Jekyll
</span><span class='line'>unchanged sass/screen.scss
</span><span class='line'>Configuration from /Users/nomoto/repos/r-nmt000.github.io/_config.yml
</span><span class='line'>Building site: source -&gt; public
</span><span class='line'>Successfully generated site: source -&gt; public
</span></code></pre></td></tr></table></div></figure>


<p>できた！</p>

<p>その後、なぜか<code>bundle exec rake</code>でも実行できるようになりました。なぜだ&hellip;</p>

<p>しかしいちいちbundle execを頭につけるのは面倒臭い&hellip;多分回避策はあるんだろうけど、見つからなかったのでとりあえず現状はこれでよしとしよう。</p>

<hr />

<h2>disqusによるコメント欄追加</h2>

<p>_config.ymlに</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>disqus_short_name: &lt;blog_name&gt;
</span><span class='line'>disqus_show_comment_count: false</span></code></pre></td></tr></table></div></figure>


<p>と追加するだけ！簡単！</p>

<p>と思いきや、disqus_short_nameにはブログ名を指定しなければいけないのですが僕はdisqusのユーザIDを指定してしまいうまく動きませんでした^^;</p>

<hr />

<p>僕がつまづいたのはこんなところです。</p>

<p>独自ドメインをあてたり、Bitbucketを使ったりはまだしてないですが、おいおいやっていこうと思います。</p>
]]></content>
  </entry>
  
</feed>
