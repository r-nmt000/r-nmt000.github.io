<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Scala | NomoLog]]></title>
  <link href="http://r-nmt000.github.io/blog/tags/scala/atom.xml" rel="self"/>
  <link href="http://r-nmt000.github.io/"/>
  <updated>2014-06-19T20:42:28+09:00</updated>
  <id>http://r-nmt000.github.io/</id>
  <author>
    <name><![CDATA[r-nmt000]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Moaning Programming Language]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/28/programming-scala-brainfuck/"/>
    <updated>2013-12-28T23:52:07+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/28/programming-scala-brainfuck</id>
    <content type="html"><![CDATA[![woman](/images/woman.jpg)


#喘ぐプログラミング言語
喘いでプログラミングするための言語です。


<!-- more -->
##言語仕様
Brainfuckの派生言語です。

命令は次のとおり

| 命令      |  Brainfuck | 説明 |
| :-------: | :--------: | :------------- |
| yeah!     |  >         | ポインタをインクリメントする                         
| f**k!     |  <         | ポインタをデクリメントする                           
| ah,       |  +         | ポインタが指す値をインクリメントする                 
| oh,       |  -         | ポインタが指す値をデクリメントする                   
| comeon!   |  .         | ポインタが指す値を出力する                           
| mm...     |  ,         | 入力から1バイトポインタが指す先に読み込む            
| ohmygod!  |  [         | ポインタが指す値が0なら対応する]の直後にジャンプ     
| god!      |  ]         | ポインタが指す値が0でないなら対応する[の直後にジャンプ 

##喘ぎ方

[こちら](/downloads/MPL.jar)からjarをダウンロードしてください。(重くてごめんなさい)

テキストファイルに喘ぎ声をプログラムし、以下のコマンドを実行してください。(Java実行環境が必要)

```
java -jar MPL.jar <filename>
```

##hello world

```
ah,ah,ah,ah,ah,ah,ah,ah,ah,ohmygod!yeah!ah,ah,ah,ah,ah,ah,ah,ah,yeah!ah,ah,ah,ah,ah,ah,ah,ah,ah,ah,ah,yeah!ah,ah,ah,ah,ah,f**k!f**k!f**k!oh,god!yeah!comeon!yeah!ah,ah,comeon!ah,ah,ah,ah,ah,ah,ah,comeon!comeon!ah,ah,ah,comeon!yeah!oh,comeon!oh,oh,oh,oh,oh,oh,oh,oh,oh,oh,oh,oh,comeon!f**k!ah,ah,ah,ah,ah,ah,ah,ah,comeon!oh,oh,oh,oh,oh,oh,oh,oh,comeon!ah,ah,ah,comeon!oh,oh,oh,oh,oh,oh,comeon!oh,oh,oh,oh,oh,oh,oh,oh,comeon!yeah!ah,comeon!
```

##まとめ
もっといい喘ぎ方があったら教えて下さい。
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android with Scala]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/17/scala-android-scala/"/>
    <updated>2013-12-17T11:20:42+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/17/scala-android-scala</id>
    <content type="html"><![CDATA[#ScalaでAndroid
こちらを参考にしました！
[Scala + sbt-android + IntelliJ で快適Androidアプリ開発](http://shogogg.hatenablog.jp/entry/2013/12/06/000039)

以下に僕が詰まったところをまとめました！
<!-- more -->

 
##詰まったところ

1. compatibility-v4とcompatibility-v7-appcompatでエラーが出る
2. ensime関連のエラーが出る
3. OutOfMemoryのエラーが出る

###compatibility-v4とcompatibility-v7-appcompatでエラーが出る
参考にしたサイトの手順に沿ってソースをコンパイルしようとすると
```
[warn]      ::::::::::::::::::::::::::::::::::::::::::::::
[warn]      ::          UNRESOLVED DEPENDENCIES         ::
[warn]      ::::::::::::::::::::::::::::::::::::::::::::::
[warn]      :: android.support#compatibility-v4;19: not found
[warn]      :: android.support#compatibility-v7-appcompat;19: not found
[warn]      ::::::::::::::::::::::::::::::::::::::::::::::
```
となってコンパイルできません。

自分の環境では<project_dir>/project/build.scalaの
```
// ======================================================================                                                                                                                             
34   // 依存関係
35   // ======================================================================
36   val libraryDependencies = Seq(
37
38     // Android Support Library v4 (jar)
39     "android.support" % "compatibility-v4" % "19",
40
41     // Android Support Library v7 (jar & apklib)
42     "android.support" % "compatibility-v7-appcompat" % "19",
43     apklib("android.support" % "compatibility-v7-appcompat" % "19")
44
45   )
```
の"19"の部分を"19.0.0"に変更したらうまくいきました。


###ensime関連のエラーが出る
上記のエラーと似たような感じで、ensimeが見つからねえよ！と怒られるエラーが起きました。
これに関しては調べても解決策が見つからず、恐らく以前に入れたensimeがなにか悪さをしてるんだろーなーと思い
sbtとscalaをインストールし直したところ直りました。
```
brew uninstall sbt
brew uninstall scala
rm -rf ~/.sbt
rm -rf ~/.ivy2
brew install sbt
brew instalo scala
```
わけわからなくなったら全部入れ替えちゃうのも手ですね。

###OutOfMemoryのエラーが出る
これはeclipseでjavaやってたときもみたことあるエラーでした。
eclipseのときはeclipse.iniにメモリサイズを明示することで解決しましたがscalaでは~/.sbtconfigに
```
SBT_OPTS="-Dfile.encoding=UTF-8 -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m"  
```
とすることで解決しました。先頭のUTF-8のオプションは元々ついていたもので、後からCMSClassUnloadingとMaxPermSizeを追加しました。 

###IntelliJ IDEA 13でandroid support libraryの解決がうまくいかない
参考にしたサイトではIntelliJ 12を使っているようですが最新が13なので僕は13を使いました。

13はsbtのプロジェクトをそのままimportする機能があり`sbt gen-idea`する必要がないのですが、今回の構成に限ってはIntelliJの機能でimport
するのではなく`sbt gen-idea`してからIntelliJでopenするのが無難です。
###まとめ
僕が詰まったのはこんなところです。
みなさん素晴らしいscalaライフを!
]]></content>
  </entry>
  
</feed>
