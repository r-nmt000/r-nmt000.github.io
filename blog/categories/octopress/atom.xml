<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | NomoLog]]></title>
  <link href="http://r-nmt000.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://r-nmt000.github.io/"/>
  <updated>2014-06-15T17:51:04+09:00</updated>
  <id>http://r-nmt000.github.io/</id>
  <author>
    <name><![CDATA[r-nmt000]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[post_urlでLiquid Exception]]></title>
    <link href="http://r-nmt000.github.io/blog/2014/06/10/octopress/"/>
    <updated>2014-06-10T00:20:34+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2014/06/10/octopress</id>
    <content type="html"><![CDATA[[post_url](http://www.drurly.com/blog/2012/06/01/octopress-linking-to-other-posts)を導入したら、Liquid Exceptionしてしまった話

<!-- more -->


自分の投稿した記事へのリンクを簡単に貼れるpost_urlを導入した所、下記リンクと同じエラーが。
対応策もかいてあるのですが、自分の環境では上手くいきませんでした。

[post_url erroring with rdiscount](https://github.com/davidfstr/rdiscount/issues/75)

しかし解決しました。リンク先ではcategory_feed.xmlに問題があったようですが、自分の場合はtag_feed.xmlに問題があったようです。

一応category_feed.xmlもtag_feed.xmlも`markdownify`の箇所を`markdownize`に変更

エラーが消えました＼(^o^)／

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressで謎のLiquid Exception]]></title>
    <link href="http://r-nmt000.github.io/blog/2014/06/07/octopress/"/>
    <updated>2014-06-07T01:13:24+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2014/06/07/octopress</id>
    <content type="html"><![CDATA[久しぶりにブログ書いて`rake generate`したら
```
Liquid Exception: undefined method `sort!' for nil:NilClass in ... 
```

なるエラーで怒られた。

<!-- more -->


ググると[Liquidタグをエスケープする](http://daisukekobayashi.com/blog/escape-liquid-template-tags-in-octopress)という記事があったけどそんなタグ使った覚えがない。

なんでだろうとよくよく調べると前回書きかけの記事のマークダウンファイルを、通常は`source/_post`以下に置くところを`source/tmp`フォルダを作ってそこに避けて置いたのを見つけた。で、これを外に除けたらエラーが消えた。

なんかよくわからんけど、よかったよかった(*^^*)



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TagCloud]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/04/octopress-tagcloud/"/>
    <updated>2013-12-04T20:18:00+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/04/octopress-tagcloud</id>
    <content type="html"><![CDATA[##タグクラウド導入してみました。
参考にしたサイトはこちら

 - [Octopressでのタグの運用](http://rcmdnk.github.io/blog/2013/04/12/blog-octopress/)

 - [Octopressのカスタマイズ](http://blog.digital-bot.com/blog/2013/09/03/octopress-tips/)

ありがとうございました。
<!-- more -->

##タグクラウドって？

 - 各記事の内容を端的に表す"タグ"
 - そのタグのリストを**おされ**(重要)に表示したもの(主観)
 - 昔はSEO対策で意味あったっぽい。
 - 今は対策されて意味ないっぽい。

##導入
上記サイトの手順をそのまま実行するだけでおっけーでした。
なので僕がここに書くことはありません笑

ただ、自分のRubyの知識不足とファイルの置換ミスで割と手間取ってしまったので、
結果として結構時間がかかってしまいました。変更箇所は割と多いので細かくブランチを切って作業することをおすすめします。

Ruby勉強しなきゃなあ...

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start your blog with Octopress]]></title>
    <link href="http://r-nmt000.github.io/blog/2013/12/01/new-octopress/"/>
    <updated>2013-12-01T13:51:44+09:00</updated>
    <id>http://r-nmt000.github.io/blog/2013/12/01/new-octopress</id>
    <content type="html"><![CDATA[#Octopressで始めるギークなブログ
アウトプットの練習として、ブログを始めることにしました。
色んなブログサービスがありますがエンジニア向けということで[Octopress](octopress.org)を使ってみることに。
設定は以下のサイトを参考にしました。

<!-- more -->
 - [Octopressはじめました](http://www.miukoba.net/blog/2013/01/05/start-octopress/)

 - [OctopressでGitHub無料ブログ。sourceをBitbucket管理。簡単ガイド！](http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/)

大まかな手順は次の通りです。
```
GitHubでOctopress用のリポジトリ作成
Octopressからソースコード取得
GitHubへのdeploy設定
ブログの細かな設定
ブログテーマの変更
記事を作成、アップ
```

上記の手順を１から丁寧に書いてもいいんですが、Octopressの設定については多くの方が分かりやすくまとめてらっしゃるのでここでは自分がつまづいたところをかいつまんで説明していこうと思います。

---

##rake install ['theme-name']がうまくいかない
ブログテーマを設定する箇所です。なぜかinstallが上手くいきません。なんでかなーとググってみると
[Markdownで書いてGitで管理するブログ「Octopress」の始め方](http://tantant.jp/blog/Octopress/installing-octopress/)
にある通り、zshを使っていると*[ ]*が式として認識されてしまうらしいです。
対応策としては`rake install \['theme-name'\]`のように括弧をバックスラッシュでエスケープする、もしくは.zshrcに以下の設定を追記しましょう。
```
setopt nonomatch
```
`alias rake="noglob rake"`を追記する方法もありますが、これだと後述する`bundle exec`と組み合わさった時上手く動きませんでした。

---

##rake generateがうまくいかない
次のエラーが吐かれてrakeが止まります。
```
rake aborted!
You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Using bundle exec may solve this.
/Users/nomoto/repos/r-nmt000.github.io/Rakefile:2:in `<top (required)>'
(See full trace by running task with --trace)
```
[Octopress:/var/log/messages](http://d.hatena.ne.jp/yamanetoshi/20131102/1383355220)によると`bundle exec rake generate`で上手く動くらしいのですが、動かない...

更に調べると[バージョンを指定してRakeを実行する](http://kozy4324.github.io/blog/2013/03/02/exec-rake-with-version/)ということができるらしいので試してみました。
```
rake _0.9.6_ generate
(in /Users/nomoto/repos/r-nmt000.github.io)
## Generating Site with Jekyll
unchanged sass/screen.scss
Configuration from /Users/nomoto/repos/r-nmt000.github.io/_config.yml
Building site: source -> public
Successfully generated site: source -> public

```

できた！

その後、なぜか`bundle exec rake`でも実行できるようになりました。なぜだ...

しかしいちいちbundle execを頭につけるのは面倒臭い...多分回避策はあるんだろうけど、見つからなかったのでとりあえず現状はこれでよしとしよう。

---
##disqusによるコメント欄追加
_config.ymlに
```
disqus_short_name: <blog_name>
disqus_show_comment_count: false
```
と追加するだけ！簡単！

と思いきや、disqus_short_nameにはブログ名を指定しなければいけないのですが僕はdisqusのユーザIDを指定してしまいうまく動きませんでした^^;

---

僕がつまづいたのはこんなところです。

独自ドメインをあてたり、Bitbucketを使ったりはまだしてないですが、おいおいやっていこうと思います。

]]></content>
  </entry>
  
</feed>
